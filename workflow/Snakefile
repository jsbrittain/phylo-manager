configfile: "config/config.yaml"

rule all:
    input:
        expand(
            "results/{outdir}/{outfile}",
            outdir=config["seq_accessions"]["output_namespace"],
            outfile=config["seq_accessions"]["output_filename"],
        ),
        "results/nextalign.fasta",
    default_target: True

rule extract_nextclade_seq_names:
    input:
        "results/nextclade/nextclade.tsv",
    output:
        "results/extract_nextclade_seq_names/subsampled_passed_seq_ids.txt",
    log:
        "logs/extract_nextclade_seq_names.log",
    benchmark:
        "benchmarks/extract_nextclade_seq_names.txt"
    conda:
        "envs/extract_nextclade_seq_names.yaml"
    shell:
        "workflow/scripts/extract_nextclade_seq_names/extract_nextclade_seq_names.sh -i {input} -o {output}"


rule extract_nextclade_sequences:
    input:
        seqids="results/extract_nextclade_seq_names/subsampled_passed_seq_ids.txt",
        fasta="results/gisaid_subsampled_seqs/subsampled_sequences.fasta",
    output:
        "results/subsampled_passed_sequences.fasta",
    log:
        "logs/extract_nextclade_sequences.log",
    benchmark:
        "benchmarks/extract_nextclade_sequences.txt"
    conda:
        "envs/extract_nextclade_sequences.yaml"
    shell:
        "workflow/scripts/extract_nextclade_sequences/extract_nextclade_sequences.sh -i {input.seqids} -m {input.fasta} -o {output}"


rule add_reference_sequence:
    input:
        ref=expand(
            "results/{outdir}{infile}",
            outdir=config["get_reference_seqs"]["outdir"],
            infile=config["get_reference_seqs"]["infile"],
        ),
        clean="results/subsampled_passed_sequences.fasta",
    output:
        "results/subsampled_passed_sequences_refAdded.fasta",
    log:
        "logs/add_reference_sequence.log",
    benchmark:
        "benchmarks/add_reference_sequence.txt"
    conda:
        "envs/add_reference_sequence.yaml"
    shell:
        "cat {input.ref} {input.clean} > {output}"


rule nextalign:
    input:
        "results/subsampled_passed_sequences_refAdded.fasta",
    output:
        "results/nextalign.fasta",
    log:
        "logs/nextalign.log",
    benchmark:
        "benchmarks/nextalign.txt"
    conda:
        "envs/nextalign.yaml"
    shell:
        "workflow/scripts/nextalign/run_nextalign.sh -i {input}"


module get_reference_seqs:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/get_remote_file/workflow/Snakefile",
            branch="main",
        )
    config:
        config["get_reference_seqs"]


use rule * from get_reference_seqs as get_reference_seqs_*


module get_owid:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/get_remote_file/workflow/Snakefile",
            branch="main",
        )
    config:
        config["get_owid"]


use rule * from get_owid as get_owid_*


module get_gisaid:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/get_remote_file/workflow/Snakefile",
            branch="main",
        )
    config:
        config["get_gisaid"]


use rule * from get_gisaid as get_gisaid_*


module get_gisaid_subsampled_seqs:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/get_remote_file/workflow/Snakefile",
            branch="main",
        )
    config:
        config["get_gisaid_subsampled_seqs"]


use rule * from get_gisaid_subsampled_seqs as get_gisaid_subsampled_seqs_*

module gisaid:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/gisaid/workflow/Snakefile",
            branch="main",
        )
    config:
        config["gisaid"]

use rule * from gisaid as gisaid_*

module subsample_gis_owid:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/subsample_gis_owid/workflow/Snakefile",
            branch="main",
        )
    config:
        config["subsample_gis_owid"]

use rule * from subsample_gis_owid as subsample_gisaid_owid_*

module seq_accessions:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/seq_accessions/workflow/Snakefile",
            branch="main",
        )
    config:
        config["seq_accessions"]

use rule * from seq_accessions as seq_accessions_*

module process_owid_case_data:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/process_owid_case_data/workflow/Snakefile",
            branch="main",
        )
    config:
        config["process_owid_case_data"]

use rule * from process_owid_case_data as process_owid_case_data_*

module nextclade:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/nextclade/workflow/Snakefile",
            branch="main",
        )
    config:
        config["nextclade"]

use rule * from nextclade as nextclade_*

module extract_gisaid_by_seq_name:
    snakefile:
        github(
            "jsbrittain/snakeshack",
            path="workflows/OxfordPhyloGenetics/modules/extract_gisaid_by_seq_name/workflow/Snakefile",
            branch="main",
        )
    config:
        config["extract_gisaid_by_seq_name"]

use rule * from extract_gisaid_by_seq_name as extract_gisaid_by_seq_name_*
